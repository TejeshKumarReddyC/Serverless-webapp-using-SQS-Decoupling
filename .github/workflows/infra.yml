name: Deploy Infrastructure with CloudFormation

on:
  workflow_dispatch:

env:
  AWS_REGION: ap-south-1
  ACCOUNT_ID: 202583917032

jobs:
  deploy-infra:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Configure AWS credentials with OIDC
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::202583917032:role/githubconn
        aws-region: ${{ env.AWS_REGION }}

    - name: Deploy VPC/network stack
      run: |
        aws cloudformation deploy           --template-file infra/network.yml           --stack-name ecommerce-network           --capabilities CAPABILITY_NAMED_IAM

    - name: Deploy RDS stack
      run: |
        aws cloudformation deploy           --template-file infra/rds.yml           --stack-name ecommerce-rds           --capabilities CAPABILITY_NAMED_IAM           --parameter-overrides             DBUsername=admin             DBPassword=YourSecurePassword123!

    - name: Deploy SQS stack
      run: |
        aws cloudformation deploy           --template-file infra/sqs.yml           --stack-name ecommerce-sqs

    - name: Deploy ECS Cluster
      run: |
        aws cloudformation deploy           --template-file infra/ecs.yml           --stack-name ecommerce-cluster

    - name: Deploy ECS Task Definitions
      run: |
        aws cloudformation deploy           --template-file infra/ecs-taskdefs.yml           --stack-name ecommerce-taskdefs   --capabilities CAPABILITY_NAMED_IAM      --parameter-overrides             ECRRepoUser=202583917032.dkr.ecr.ap-south-1.amazonaws.com/users:latest             ECRRepoProduct=202583917032.dkr.ecr.ap-south-1.amazonaws.com/products:latest             ECRRepoOrder=202583917032.dkr.ecr.ap-south-1.amazonaws.com/orders:latest             OrderQueueURL=https://sqs.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ACCOUNT_ID }}/order-queue

    - name: Deploy ECS Services
      run: |
        VPC_ID=$(aws cloudformation describe-stacks --stack-name ecommerce-network --query "Stacks[0].Outputs[?OutputKey=='VPCId'].OutputValue" --output text)
        SUBNET1=$(aws ec2 describe-subnets --filters "Name=tag:Name,Values=PublicSubnet1" --query "Subnets[0].SubnetId" --output text)
        SUBNET2=$(aws ec2 describe-subnets --filters "Name=tag:Name,Values=PublicSubnet2" --query "Subnets[0].SubnetId" --output text)
        USER_TASKDEF=$(aws ecs describe-task-definition --task-definition user-service-task --query "taskDefinition.taskDefinitionArn" --output text)
        PRODUCT_TASKDEF=$(aws ecs describe-task-definition --task-definition product-service-task --query "taskDefinition.taskDefinitionArn" --output text)
        ORDER_TASKDEF=$(aws ecs describe-task-definition --task-definition order-service-task --query "taskDefinition.taskDefinitionArn"  --output text)

        aws cloudformation deploy           --template-file infra/ecs-services.yml           --stack-name ecommerce-services           --capabilities CAPABILITY_NAMED_IAM           --parameter-overrides             VPCId=$VPC_ID             Subnet1=$SUBNET1             Subnet2=$SUBNET2             UserTaskDefArn=$USER_TASKDEF             ProductTaskDefArn=$PRODUCT_TASKDEF             OrderTaskDefArn=$ORDER_TASKDEF
